<UserControl x:Class="SnippetManager.Views.SnippetWindowControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:vsshell="clr-namespace:Microsoft.VisualStudio.Shell;assembly=Microsoft.VisualStudio.Shell.15.0"
             Background="{DynamicResource {x:Static vsshell:VsBrushes.WindowKey}}"
             Foreground="{DynamicResource {x:Static vsshell:VsBrushes.WindowTextKey}}"
             xmlns:b="http://schemas.microsoft.com/xaml/behaviors"             
             mc:Ignorable="d"
             d:DesignHeight="300" d:DesignWidth="1200"
             Name="SnippetWindow">

    <UserControl.Resources>
        <ResourceDictionary>
            <Color x:Key="SelectedBackgroundColor">#FF4682B4</Color>
            <Color x:Key="SelectedUnfocusedColor">#FF898989</Color>
            <Color x:Key="ControlMouseOverColor">#FF778899</Color>
            <Color x:Key="ControlPressedColor">#FF211AA9</Color>
            
            <Style x:Key="GridViewColumnHeaderGripper" TargetType="Thumb">
                <Setter Property="Width" Value="18" />
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0,0"
                           EndPoint="0,1">
                            <LinearGradientBrush.GradientStops>
                                <GradientStopCollection>
                                    <GradientStop Color="{DynamicResource BorderLightColor}" Offset="0.0" />
                                    <GradientStop Color="{DynamicResource BorderDarkColor}" Offset="1.0" />
                                </GradientStopCollection>
                            </LinearGradientBrush.GradientStops>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Border Padding="{TemplateBinding Padding}" Background="Transparent">
                                <Rectangle HorizontalAlignment="Center" Width="1" Fill="{DynamicResource {x:Static vsshell:VsBrushes.WindowTextKey}}" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="BorderBrush">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0.5,1"
                           StartPoint="0.5,0">
                            <GradientStop Color="Black" Offset="0" />
                            <GradientStop Color="White" Offset="1" />
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="{x:Type GridViewColumnHeader}">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static vsshell:VsBrushes.WindowTextKey}}"/>
                <Setter Property="Background" Value="{DynamicResource {x:Static vsshell:VsBrushes.WindowKey}}"/>
                <Setter Property="FontWeight" Value="Normal"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="GridViewColumnHeader">
                            <Grid>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal" />
                                        <VisualState x:Name="MouseOver">
                                            <Storyboard>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).
                                                    (GradientBrush.GradientStops)[0].(GradientStop.Color)"
                                                    Storyboard.TargetName="HeaderBorder">
                                                    <EasingColorKeyFrame KeyTime="0" Value="Gainsboro" />
                                                </ColorAnimationUsingKeyFrames>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).
                                                    (GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                    Storyboard.TargetName="HeaderBorder">
                                                    <EasingColorKeyFrame KeyTime="0" Value="Gainsboro" />
                                                </ColorAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Pressed" />
                                        <VisualState x:Name="Disabled" />
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                
                                <Border x:Name="HeaderBorder"
                                      BorderThickness="0,1,0,1"
                                      Padding="2,0,2,0">        
                                    <Border.BorderBrush>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                            <LinearGradientBrush.GradientStops>
                                                <GradientStopCollection>
                                                    <GradientStop Color="{DynamicResource BorderLightColor}" Offset="0.0" />
                                                    <GradientStop Color="{DynamicResource BorderDarkColor}" Offset="1.0" />
                                                </GradientStopCollection>
                                            </LinearGradientBrush.GradientStops>
                                        </LinearGradientBrush>

                                    </Border.BorderBrush>
                                    <Border.Background>

                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                            <LinearGradientBrush.GradientStops>
                                                <GradientStopCollection>
                                                    <GradientStop Color="{DynamicResource ControlLightColor}" Offset="0.0" />
                                                    <GradientStop Color="{DynamicResource ControlMediumColor}" Offset="1.0" />
                                                </GradientStopCollection>
                                            </LinearGradientBrush.GradientStops>
                                        </LinearGradientBrush>

                                    </Border.Background>
                                    <ContentPresenter x:Name="HeaderContent"
                                          Margin="0,0,0,1"
                                          RecognizesAccessKey="True"                                                     
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Border>
                                
                                <Thumb x:Name="PART_HeaderGripper"
                                     HorizontalAlignment="Right"
                                     Margin="0,0,-9,0"
                                     Style="{StaticResource GridViewColumnHeaderGripper}" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="FontWeight" Value="Bold"/>
                        <Setter Property="Foreground" Value="Black"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="{x:Type ListViewItem}" TargetType="ListViewItem">
                <Setter Property="SnapsToDevicePixels" Value="true" />
                <Setter Property="OverridesDefaultStyle" Value="true" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListBoxItem">
                            <Border x:Name="Border"
                                Padding="2"
                                SnapsToDevicePixels="true"
                                Background="Transparent">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal" />
                                        <VisualState x:Name="MouseOver" />
                                        <VisualState x:Name="Disabled" />
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="SelectionStates">
                                        <VisualState x:Name="Unselected" />
                                        <VisualState x:Name="Selected">
                                            <Storyboard>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                                    <EasingColorKeyFrame KeyTime="0"
                                                        Value="{StaticResource SelectedBackgroundColor}" />
                                                </ColorAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="SelectedUnfocused">
                                            <Storyboard>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                                    <EasingColorKeyFrame KeyTime="0"
                                                        Value="{StaticResource SelectedUnfocusedColor}" />
                                                </ColorAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <GridViewRowPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="{x:Type Button}">
                <Setter Property="Background" Value="{DynamicResource {x:Static vsshell:VsBrushes.WindowKey}}"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static vsshell:VsBrushes.WindowTextKey}}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border Background="{TemplateBinding Background}" 
                                    BorderBrush="{TemplateBinding BorderBrush}" 
                                    BorderThickness="{TemplateBinding BorderThickness}">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{DynamicResource {x:Static vsshell:VsBrushes.ButtonHighlightKey}}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid>
        <DockPanel>
            <StackPanel DockPanel.Dock="Top" Margin="10" Orientation="Horizontal">
                <TextBlock Margin="5 0" VerticalAlignment="Center" Text="Filter:"/>
                <TextBox Margin="5 0" Width="240" Height="22" VerticalContentAlignment="Center"
                         Text="{Binding Keyword, UpdateSourceTrigger=PropertyChanged}"/>
                <Button Margin="5 0" Content="Add" Width="75" Height="25" Command="{Binding AddCommand}"/>
                <Button Margin="5 0" Content="Remove" Width="75" Height="25" Command="{Binding DeleteCommand}"/>
                <Button Margin="5 0" Content="Copy" Width="75" Height="25" Command="{Binding CopyCommand}"/>
                <Button Margin="5 0" Content="Save" Width="75" Height="25" Command="{Binding SaveCommand}"/>
                <Button Margin="5 0" Content="Rename" Width="75" Height="25" Command="{Binding RenameCommand}"/>
            </StackPanel>
            
            <Grid Margin="5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="3"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                
                <GridSplitter Grid.Column="1" HorizontalAlignment="Stretch"
                              Background="{DynamicResource {x:Static vsshell:VsBrushes.WindowKey}}"
                              Foreground="{DynamicResource {x:Static vsshell:VsBrushes.WindowTextKey}}"/>
                
                <ListView Grid.Column="0" Style="{x:Null}"
                          Name="ListView"
                          Width="300" ItemsSource="{Binding CodeDataView}"
                          SelectedItem="{Binding SelectedItem}"
                          Background="{DynamicResource {x:Static vsshell:VsBrushes.WindowKey}}"
                          Foreground="{DynamicResource {x:Static vsshell:VsBrushes.WindowTextKey}}">

                    <ListView.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Copy" Command="{Binding CopyCommand}"/>
                            <MenuItem Header="Rename" Command="{Binding RenameCommand}"/>
                            <MenuItem Header="Delete" Command="{Binding DeleteCommand}"/>
                        </ContextMenu>
                    </ListView.ContextMenu>
                    
                    <b:Interaction.Triggers>
                        <b:EventTrigger EventName="MouseDoubleClick">
                            <b:InvokeCommandAction Command="{Binding CopyCommand}"/>
                        </b:EventTrigger>
                    </b:Interaction.Triggers>
                    
                    <ListView.View>
                        <GridView>
                            <GridViewColumn Width="250" Header="Name" DisplayMemberBinding="{Binding Name}"/>
                        </GridView>
                    </ListView.View>
                </ListView>     
                
                <TextBox Grid.Column="2" 
                         TextWrapping="Wrap"
                         AcceptsReturn="True"
                         VerticalScrollBarVisibility="Visible"
                         Background="{DynamicResource {x:Static vsshell:VsBrushes.WindowKey}}"
                         Foreground="{DynamicResource {x:Static vsshell:VsBrushes.WindowTextKey}}"
                         Text="{Binding SelectedItem.Content, ElementName=ListView}"/>
                
            </Grid>
        </DockPanel>        
    </Grid>
</UserControl>
